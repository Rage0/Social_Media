@model User

@{
    Layout = "_Layout";
    ViewBag.Title = "Friends";
}

<div>
    @if (Model.UserFriends.Count > 0)
    {
        <div class="text-center m-1">
            <h4>My friends</h4>
        </div>
    }
    else
    {
        <div class="text-center m-1">
            <h4>You don't have friends</h4>
        </div>
    }
    
    @foreach (User user in Model.UserFriends)
    {
        <div class="card m-2">
            <div class="card-body d-flex justify-content-between">
                <div>
                    <h4>Name: @user.UserName</h4>
                </div>
                <div class="d-flex">
                    <div class="mx-1">
                        <form asp-action="RemoveFromFriend" asp-controller="OtherActionAccount">
                            <input hidden="hidden" name="FriendName" value="@user.UserName">
                            <button class="btn btn-secondary p-1" type="submit">Remove from friend</button>
                        </form>
                    </div>
                    <div class="mx-1">
                        @if (user.UserFriends.Contains(Model))
                        {
                            @if (user.PrivateChats.HasSamePrivateChat(Model.PrivateChats))
                            {
                                <form asp-action="PrivateChatingRoom" asp-controller="PrivateChat">
                                    <input hidden="hidden" name="UserName" value="@Model.UserName">
                                    <input hidden="hidden" name="FriendName" value="@user.UserName">
                                    <button class="btn btn-secondary p-1" type="submit">Send massage</button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="CreatePrivateChat" asp-controller="CrudPrivateChat">
                                    <input hidden="hidden" name="model.UserName" value="@Model.UserName">
                                    <input hidden="hidden" name="model.FriendName" value="@user.UserName">
                                    <button class="btn btn-secondary p-1" type="submit">Start a conversation</button>
                                </form>
                            }
                        }
                        else
                        {
                            <button class="btn btn-secondary p-1" disabled="disabled" type="button">You are followed</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@if (Model.FollowingUser.Where(user => !user.UserFriends.Contains(Model)).Count() != 0)
{
    <div class="mt-3 border-top">
        <div class="text-center m-1">
            <h4>Followed user</h4>
        </div>
        @foreach (User userFollowed in Model.FollowingUser)
        {
            <div class="card m-2">
                <div class="card-body d-flex justify-content-between">
                    <div>
                        <h4>Name: @userFollowed.UserName</h4>
                    </div>
                    <div>
                        <form asp-action="AddFriendToUser" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()" asp-controller="OtherActionAccount">
                            <input hidden="hidden" name="UserName" value="@Model.UserName">
                            <input hidden="hidden" name="FriendName" value="@userFollowed.UserName">
                            <button class="btn btn-secondary p-1" type="submit">Add as Friends</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}
