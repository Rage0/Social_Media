@model User

@{
    Layout = "_Layout";
    ViewBag.Title = "My Profile";
}

<div class="border-0 border-bottom">
    <div class="d-flex mx-4">
        <div class="m-3">
            <div class="border border-dark" style="height: 250px; width: 250px"></div>
            <div class="text-center">

                <h4>User friends: @Model.UserFriends.Count</h4>
                <h4>Following user: @Model.FollowingUser.Where(user => !user.UserFriends.Contains(Model)).Count()</h4>
            </div>
        </div>
        
        <div class="m-3 px-md-5">
            <div class="border-0 border-bottom border-dark mt-1">
                <h3 class="fs-2">Name: @Model.UserName</h3>
            </div>
            <div class="border-0 border-bottom border-dark  mt-1">
                <h4 class="fs-2 fst-normal">Email: @Model.Email</h4>
            </div>
            <div class="border-0 border-bottom border-dark  mt-1">
                <h4 class="fs-2 fst-normal">Id: @Model.Id</h4>
            </div>
            @if (Context.User.IsInRole("User"))
            {
                <div class="border-0 border-bottom border-dark  mt-1">
                    <h3 class="fs-2 fst-normal">Role: User</h3>
                </div>
            }
            @if (Context.User.IsInRole("Admin"))
            {
                <div class="border-0 border-bottom border-dark  mt-1">
                    <h3 class="fs-2 fst-normal">Role: Admin</h3>
                </div>   
            }
        </div>
    </div>

</div>
<div class="m-1 mx-2 d-flex justify-content-between">
    <div class="p-1">
        <a class="btn btn-secondary p-1" asp-action="MyFriends" asp-controller="OtherAccount" asp-route-userName="@Model.UserName">My friends</a>
    </div>
    <div class="p-1">
        <a class="btn btn-secondary p-1" asp-action="UserChats" asp-controller="Chat" asp-route-userName="@Model.UserName">My chats</a>
    </div>
    <div class="p-1">
        <a class="btn btn-secondary p-1" asp-action="Setting" asp-controller="Account" asp-route-userName="@Model.UserName">Setting</a>
    </div>
    <div class="p-1">
        <a class="btn btn-secondary p-1" asp-action="CreatePost" asp-controller="PostWall">Create post</a>
    </div>
    <div class="p-1">
        <a class="btn btn-secondary p-1" asp-action="CreateChat" asp-controller="Chat">Create chat</a>
    </div>
</div>
<div class="mt-2 border-top">
    @foreach (Post post in Model.Posts.OrderByDescending(post => post.CreateAt))
    {
       <div class="m-1 card">
           <div class="card-header text-center">
               <h4>@post.Title</h4>
           </div>
           <div class="card-body">
               <p class="card-text fs-4">@post.Discription</p>
           </div>
           <div class="card-footer">
                <div class="d-flex justify-content-between">
                    <div class="m-1">
                        <form asp-action="RemovetPost" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()" asp-controller="CrudPostWall">
                            <input hidden="hidden" name="PostId" value="@post.Id">
                            <button class="btn btn-secondary p-1" type="submit">Remove</button>
                        </form>
                    </div>
                    <div class="m-1">
                        <h6>@post.CreateAt</h6>
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <div class="m-1">
                        <form asp-action="EditPost" asp-controller="PostWall">
                            <input hidden="hidden" name="PostId" value="@post.Id">
                            <button class="btn btn-secondary p-1" type="submit">Edit</button>
                        </form>
                    </div>
                    <div class="m-1">
                        <h6>@post.UpdateAt</h6>
                    </div>
                </div>
           </div>
       </div>
    }
    <div style="width: auto; height:100px"></div>
</div>

